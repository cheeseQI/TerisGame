module vga_controller(iRST_n,
                      iVGA_CLK,
                      oBLANK_n,
                      oHS,
                      oVS,
                      b_data,
                      g_data,
                      r_data,
							 up,
							 down,
							 left,
							 right);

	
input iRST_n;
input iVGA_CLK;
input up, down, left, right;
output reg oBLANK_n;
output reg oHS;
output reg oVS;
reg[18:0] x,y;
output [7:0] b_data;
output [7:0] g_data;  
output [7:0] r_data; 
//////////////
reg [18:0] scanx,scany; //scan point for x, y position;note: y is horizontal, x is vertical
reg [18:0] count;     
///////// ////                     
reg [18:0] ADDR;
reg [18:0] ADDR_t;
reg [23:0] bgr_data;
wire VGA_CLK_n;
wire [7:0] index;
wire [23:0] bgr_data_raw;
wire cBLANK_n,cHS,cVS,rst;
////
assign rst = ~iRST_n;

video_sync_generator LTM_ins (.vga_clk(iVGA_CLK),
                              .reset(rst),
                              .blank_n(cBLANK_n),
                              .HS(cHS),
                              .VS(cVS));
////



////Addresss generator
always@(posedge iVGA_CLK,negedge iRST_n)
begin
  if (!iRST_n)
		begin
      ADDR<=19'b0;
	   //ADDR_t<=19'b0;
	  end
  else if (cHS==1'b0 && cVS==1'b0)
		begin
     ADDR<=19'b0;
	  //ADDR_t<=19'b0;
	  end
  else if (cBLANK_n==1'b1)
		begin
		count<=count+1;
		if(count==19'h4b000)
			count<=0;
		ADDR<=ADDR+1;
		scanx <= ADDR/640;
		scany <= ADDR % 640;
		if(scany < 80+y && scany>=y && scanx>=x && scanx<80+x) // 80 * 80 suqare
			ADDR_t<=1;
		else if(scanx<240 && scanx>=0)
			ADDR_t<=0;
		else if(scanx>=240 && scanx<480)
			ADDR_t<=2;
		end
end
//////////////////////////
//////INDEX addr.
assign VGA_CLK_n = ~iVGA_CLK;
img_data	img_data_inst (
	.address ( ADDR_t ),
	.clock ( VGA_CLK_n ),
	.q ( index )
	);
	
/////////////////////////
//////Add switch-input logic here
always@(posedge iVGA_CLK)
begin
	if(count==19'h4afff)
	begin
		if(!right) //check bound
			begin
			y<=y+1;
			if(y>560)
				y<=560;
			end
		if(!left)
		   begin
			y<=y-1;
			if(y<1)
				y<=1;
			end
		if(!down)
			begin
			x<=x+1;
			if(x>=400)
				x<=400;
			end
		if(!up)
			begin
			x<=x-1;
			if(x<1)
				x<=1;
			end
	end
end

	
	//////Color table output
img_index	img_index_inst (
	.address ( index ),
	.clock ( iVGA_CLK ),
	.q ( bgr_data_raw)
	);	
//////
//////latch valid data at falling edge;
always@(posedge VGA_CLK_n) bgr_data <= bgr_data_raw;
assign b_data = bgr_data[23:16];
assign g_data = bgr_data[15:8];
assign r_data = bgr_data[7:0]; 
///////////////////
//////Delay the iHD, iVD,iDEN for one clock scanycle;
always@(negedge iVGA_CLK)
begin
  oHS<=cHS;
  oVS<=cVS;
  oBLANK_n<=cBLANK_n;
end
endmodule
